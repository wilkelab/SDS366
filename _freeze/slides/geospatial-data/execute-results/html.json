{
  "hash": "da9aad284bdd0ac668700c35e838212d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing geospatial data\"\nauthor: \"Claus O. Wilke\"\ndate: last-modified\nformat: \n  revealjs:\n    theme:\n      - default\n      - Wilke-theme.scss\n    auto-stretch: false\n    chalkboard: true\nexecute:\n  fig-format: svg\n  fig-asp: 0.618\n  fig-width: 5.5\n---\n\n\n\n\n\n## Parallels (latitude) and meridians (longitude)\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/world-orthographic-1.png){width=\"55%\" fig-align=\"center\"}\n\n## There are many ways to project onto a 2D plane\n\n![](https://clauswilke.com/dataviz/coordinate_systems_axes_files/figure-html/worldmap-four-projections-1.png){width=\"85%\" fig-align=\"center\"}\n\n## There are many ways to project onto a 2D plane\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/world-mercator-1.png){width=\"55%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nMercator projection: Shapes are preserved, areas are severely distorted\n:::\n\n## There are many ways to project onto a 2D plane\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/world-goode-1.png){width=\"95%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nGoode homolosine: Areas are preserved, shapes are somewhat distorted\n:::\n\n## Projecting the US\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/usa-orthographic-1.png){width=\"50%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nAlaska, Hawaii, and the lower 48 are far apart; difficult to show on one map\n:::\n\n## Projecting the US\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/usa-true-albers-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nA fair, area-preserving projection\n:::\n\n## A common visualization. What happened to Alaska?\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/usa-albers-1.png){width=\"75%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nAlaska and Hawaii were moved closer; Alaska was also reduced in size\n:::\n\n## A fair visualization of the 50 states\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/usa-albers-revised-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nAlaska is the largest state; 2.2 the size of Texas\n:::\n\n<!-- Segment ends here -->\n\n# Choropleth mapping: Coloring areas by a data value\n\n## US population density as a choropleth map\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/population-density-counties-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nAlaska has very low population density\n:::\n\n## US population density as a choropleth map\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/population-density-counties2-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nAlaska has very low population density\n:::\n\n## US median income as a choropleth map\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/median-income-counties-binned-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nA binned color scale can make the map more readable\n:::\n\n## Choropleth maps can be misleading\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/median-income-states-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nLarge area of Alaska makes it appear very rich; but remember, it's mostly empty\n:::\n\n## A cartogram heatmap may be preferable\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/median-income-statebins-1.png){width=\"75%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nEach state is shown as an equally sized square\n:::\n\n<!-- Segment ends here -->\n\n# Maps and layers\n\n## Maps show data in a geospatial context\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/sfbay-overview-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nWind turbines in the San Francisco Bay Area\n:::\n\n## Maps are composed of several distinct layers\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/sfbay-layers-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nWind turbines in the San Francisco Bay Area\n:::\n\n## The concept of aesthetic mappings still applies\n\n![](https://clauswilke.com/dataviz/geospatial_data_files/figure-html/shiloh-map-1.png){width=\"65%\" fig-align=\"center\"}\n\n::: {.small-font .move-up-1em}\nLocation of individual wind turbines in the Shiloh Wind Farm\n:::\n\n<!-- Segment ends here -->\n\n# Making geospatial visualizations in R\n\n## The **sf** package: Simple Features in R\n\n::: {.move-up-half-em}\n![](https://user-images.githubusercontent.com/520851/50280460-e35c1880-044c-11e9-9ed7-cc46754e49db.jpg){width=\"80%\" fig-align=\"center\"}\n:::\n\n![](https://user-images.githubusercontent.com/520851/34849243-0972e474-f722-11e7-9a3d-2d4bf5075835.png){style=\"position: absolute; width: 2.5in; top: 0%; right: 0%;\"}\n<!-- https://gist.github.com/edzer/f461a3a95570c4ab7edf3125c2f19d20 -->\n\n::: {.small-font .absolute-bottom-right}\nArtwork by [Allison Horst](https://twitter.com/allison_horst/status/1071456081308614656)\n:::\n\n## Getting the data\n\n::: {.small-font}\nWe'll be working with the `texas_income` dataset:\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)  # always load the sf package when working with geospatial data\n\ntexas_income <- readRDS(url(\"https://wilkelab.org/SDS366/datasets/Texas_income.rds\"))\n\ntexas_income\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 254 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -106.6456 ymin: 25.83738 xmax: -93.50829 ymax: 36.5007\nGeodetic CRS:  NAD83\nFirst 10 features:\n    FIPS    county median_income  moe                       geometry\n1  48001  Anderson         41327 1842 MULTIPOLYGON (((-96.0648 31...\n2  48003   Andrews         70423 6038 MULTIPOLYGON (((-103.0647 3...\n3  48005  Angelina         44223 1611 MULTIPOLYGON (((-95.00488 3...\n4  48007   Aransas         41690 3678 MULTIPOLYGON (((-96.8229 28...\n5  48009    Archer         60275 5182 MULTIPOLYGON (((-98.95382 3...\n6  48011 Armstrong         59737 4968 MULTIPOLYGON (((-101.6294 3...\n7  48013  Atascosa         52192 3005 MULTIPOLYGON (((-98.80479 2...\n8  48015    Austin         53687 3810 MULTIPOLYGON (((-96.62085 3...\n9  48017    Bailey         37397 8652 MULTIPOLYGON (((-103.0469 3...\n10 48019   Bandera         49863 7193 MULTIPOLYGON (((-99.60332 2...\n```\n\n\n:::\n:::\n\n\n:::\n\n## The **sf** package: Simple Features in R\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# the entire dataset\ntexas_income\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 254 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -106.6456 ymin: 25.83738 xmax: -93.50829 ymax: 36.5007\nGeodetic CRS:  NAD83\nFirst 10 features:\n    FIPS    county median_income  moe                       geometry\n1  48001  Anderson         41327 1842 MULTIPOLYGON (((-96.0648 31...\n2  48003   Andrews         70423 6038 MULTIPOLYGON (((-103.0647 3...\n3  48005  Angelina         44223 1611 MULTIPOLYGON (((-95.00488 3...\n4  48007   Aransas         41690 3678 MULTIPOLYGON (((-96.8229 28...\n5  48009    Archer         60275 5182 MULTIPOLYGON (((-98.95382 3...\n6  48011 Armstrong         59737 4968 MULTIPOLYGON (((-101.6294 3...\n7  48013  Atascosa         52192 3005 MULTIPOLYGON (((-98.80479 2...\n8  48015    Austin         53687 3810 MULTIPOLYGON (((-96.62085 3...\n9  48017    Bailey         37397 8652 MULTIPOLYGON (((-103.0469 3...\n10 48019   Bandera         49863 7193 MULTIPOLYGON (((-99.60332 2...\n```\n\n\n:::\n:::\n\n\n:::\n\n## The **sf** package: Simple Features in R\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# the column holding geometry information\nprint(texas_income$geometry)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 254 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -106.6456 ymin: 25.83738 xmax: -93.50829 ymax: 36.5007\nGeodetic CRS:  NAD83\nFirst 5 geometries:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((-96.0648 31.98066, -96.06305 31...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((-103.0647 32.52219, -103.0005 3...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((-95.00488 31.42396, -95.00334 3...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((-96.8229 28.16743, -96.82127 28...\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMULTIPOLYGON (((-98.95382 33.49637, -98.95377 3...\n```\n\n\n:::\n:::\n\n\n:::\n\n## The **sf** package: Simple Features in R\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data wrangling works as normal\ntexas_income |>\n  filter(county == \"Travis\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -98.17298 ymin: 30.0245 xmax: -97.36954 ymax: 30.62825\nGeodetic CRS:  NAD83\n   FIPS county median_income moe                       geometry\n1 48453 Travis         61451 591 MULTIPOLYGON (((-98.15927 3...\n```\n\n\n:::\n:::\n\n\n:::\n\n## ggplot supports simple features with `geom_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\n# plot all of Texas\nggplot(texas_income) + \n  geom_sf()\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-no-aes-1.svg)\n:::\n:::\n\n\n:::\n\n## ggplot supports simple features with `geom_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\n# plot only Travis County\ntexas_income |>\n  filter(county == \"Travis\") |>\n  ggplot() + \n  geom_sf()\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-sf-filter-1.svg)\n:::\n:::\n\n\n:::\n\n## ggplot supports simple features with `geom_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\n# plot the ten richest counties\ntexas_income |>\n  slice_max(median_income, n = 10) |>\n  ggplot() + \n  geom_sf()\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-sf-filter2-1.svg)\n:::\n:::\n\n\n:::\n\n## ggplot supports simple features with `geom_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\n# color counties by median income\ntexas_income |>\n  ggplot(aes(fill = median_income)) + \n  geom_sf() +\n  scale_fill_continuous_sequential(\n    palette = \"Blues\", rev = TRUE\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-aes-1.svg)\n:::\n:::\n\n\n:::\n\n## ggplot supports simple features with `geom_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\n# highlight the ten richest counties\ntexas_income |>\n  mutate(\n    top_ten = rank(desc(median_income)) <= 10\n  ) |>\n  ggplot(aes(fill = top_ten)) + \n  geom_sf() +\n  scale_fill_manual(\n    values = c(\n      `TRUE` = \"#D55E00\",\n      `FALSE` = \"#E8EEF9\"\n    )\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-sf-mutate-1.svg)\n:::\n:::\n\n\n:::\n\n## ggplot supports simple features with `geom_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\n# highlight the ten richest counties\ntexas_income |>\n  mutate(\n    top_ten = rank(desc(median_income)) <= 10\n  ) |>\n  ggplot(aes(fill = top_ten)) + \n  geom_sf(color = \"black\", linewidth = 0.1) +\n  scale_fill_manual(\n    name = NULL,\n    values = c(\n      `TRUE` = \"#D55E00\",\n      `FALSE` = \"#E8EEF9\"\n    ),\n    breaks = c(TRUE),\n    labels = \"top-10 median income\"\n  ) +\n  theme_minimal_grid(14)\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-sf-mutate2-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.small-font}\nWe apply styling as usual\n:::\n\n## We can customize the projection with `coord_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(texas_income) + \n  geom_sf(\n    aes(fill = median_income),\n    color = \"black\", linewidth = 0.1\n  ) +\n  scale_fill_continuous_sequential(\n    palette = \"Blues\", rev = TRUE\n  ) +\n  theme_minimal_grid(14)\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-styled-1.svg)\n:::\n:::\n\n\n:::\n\n## We can customize the projection with `coord_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(texas_income) + \n  geom_sf(\n    aes(fill = median_income),\n    color = \"black\", linewidth = 0.1\n  ) +\n  scale_fill_continuous_sequential(\n    palette = \"Blues\", rev = TRUE\n  ) +\n  coord_sf() + # added by default with geom_sf()\n  theme_minimal_grid(14)\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-coord-sf-1.svg)\n:::\n:::\n\n\n:::\n\n## We can customize the projection with `coord_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(texas_income) + \n  geom_sf(\n    aes(fill = median_income),\n    color = \"black\", linewidth = 0.1\n  ) +\n  scale_fill_continuous_sequential(\n    palette = \"Blues\", rev = TRUE\n  ) +\n  coord_sf(\n    # Texas Centric Albers Equal Area projection\n    crs = 3083\n  ) +\n  theme_minimal_grid(14)\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-coord-sf-3083-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.absolute-bottom-right .small-font}\nReference: <https://spatialreference.org/ref/epsg/3083/>\n:::\n\n## We can customize the projection with `coord_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(texas_income) + \n  geom_sf(\n    aes(fill = median_income),\n    color = \"black\", linewidth = 0.1\n  ) +\n  scale_fill_continuous_sequential(\n    palette = \"Blues\", rev = TRUE\n  ) +\n  coord_sf(\n    # Texas Centric Lambert Conformal Conic projection\n    crs = 32139\n  ) +\n  theme_minimal_grid(14)\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-coord-sf-32139-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.absolute-bottom-right .small-font}\nReference: <https://spatialreference.org/ref/epsg/32139/>\n:::\n\n## We can customize the projection with `coord_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(texas_income) + \n  geom_sf(\n    aes(fill = median_income),\n    color = \"black\", linewidth = 0.1\n  ) +\n  scale_fill_continuous_sequential(\n    palette = \"Blues\", rev = TRUE\n  ) +\n  coord_sf(\n    # Web Mercator (Google Maps)\n    crs = 3857\n  ) +\n  theme_minimal_grid(14)\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-coord-sf-3857-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.absolute-bottom-right .small-font}\nReference: <https://spatialreference.org/ref/epsg/3857>\n:::\n\n## We can customize the projection with `coord_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(texas_income) + \n  geom_sf(\n    aes(fill = median_income),\n    color = \"black\", linewidth = 0.1\n  ) +\n  scale_fill_continuous_sequential(\n    palette = \"Blues\", rev = TRUE\n  ) +\n  coord_sf(\n    # Longitude-Latitude WGS84 (GPS)\n    crs = 4326\n  ) +\n  theme_minimal_grid(14)\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-coord-sf-4326-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.absolute-bottom-right .small-font}\nReference: <https://spatialreference.org/ref/epsg/4326/>\n:::\n\n## We can customize the projection with `coord_sf()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(texas_income) + \n  geom_sf(\n    aes(fill = median_income),\n    color = \"black\", linewidth = 0.1\n  ) +\n  scale_fill_continuous_sequential(\n    palette = \"Blues\", rev = TRUE\n  ) +\n  coord_sf(\n    # Alaska Albers equal area\n    crs = 3338\n  ) +\n  theme_minimal_grid(14)\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/texas-coord-sf-3338-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.absolute-bottom-right .small-font}\nReference: <https://spatialreference.org/ref/epsg/3338/>\n:::\n\n## We can get map data from the rnaturalearth package\n\n::: {.tiny-font}\n\n\n::: {.cell output-width='100%'}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\n\nsf_world <- ne_countries(returnclass='sf')\nggplot(sf_world) + geom_sf()\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/world-map-1.svg)\n:::\n:::\n\n\n:::\n\n## We can get map data from the rnaturalearth package\n\n::: {.tiny-font}\n\n\n::: {.cell output-width='100%'}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\n\nsf_world <- ne_countries(returnclass='sf')\nggplot(sf_world) + geom_sf() + coord_sf(crs = \"ESRI:54030\") # Robinson projection\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/world-map-robinson-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.absolute-bottom-right .small-font}\nReference: <https://spatialreference.org/ref/esri/54030/>\n:::\n\n## We can get map data from the rnaturalearth package\n\n::: {.small-font}\nA map of the lower 48:\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell output-width='65%'}\n\n```{.r .cell-code}\nsf_us <- ne_states(\n  country = \"United States of America\",\n  returnclass='sf'\n)\n\nsf_us |>\n  # exclude Alaska (US02), Hawaii (US15)\n  filter(!code_local %in% c(\"US02\", \"US15\")) |>\n  ggplot() + geom_sf()\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/lower-48-map-1.svg)\n:::\n:::\n\n\n:::\n\n## We can get map data from the rnaturalearth package\n\n::: {.small-font}\nA map of the lower 48:\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell output-width='65%'}\n\n```{.r .cell-code}\nsf_us <- ne_states(\n  country = \"United States of America\",\n  returnclass='sf'\n)\n\nsf_us |>\n  # exclude Alaska (US02), Hawaii (US15)\n  filter(!code_local %in% c(\"US02\", \"US15\")) |>\n  ggplot() + geom_sf() + coord_sf(crs = \"ESRI:102003\") # US Albers equal area\n```\n\n::: {.cell-output-display}\n![&nbsp;](geospatial-data_files/figure-revealjs/lower-48-map-Albers-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.absolute-bottom-right .small-font}\nReference: <https://spatialreference.org/ref/esri/102003/>\n:::\n\n<!-- Segment ends here -->\n\n## Further reading\n\n- Fundamentals of Data Visualization: [Chapter 15: Visualizing geospatial data](https://clauswilke.com/dataviz/geospatial-data.html)\n- **sf** package documentation: [Simple Features for R](https://r-spatial.github.io/sf/index.html)\n- **ggplot2** reference documentation: [`geom_sf()`, `coord_sf()`](https://ggplot2.tidyverse.org/reference/ggsf.html)\n\n",
    "supporting": [
      "geospatial-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}