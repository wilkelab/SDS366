{
  "hash": "9c8640ac328e829a20d496af1e839046",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Aesthetic mappings\"\nauthor: \"Claus O. Wilke\"\ndate: last-modified\nformat: \n  revealjs:\n    theme:\n      - default\n      - Wilke-theme.scss\n    auto-stretch: false\n    chalkboard: true\nexecute:\n  fig-format: svg\n  fig-asp: 0.618\n  fig-width: 5.5\n---\n\n\n\n\n\n\n# Plots map data onto graphical elements\n\n## Dataset:<br>Daily average temperatures for various locations\n\n::: {.small-font}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> location </th>\n   <th style=\"text-align:right;\"> day_of_year </th>\n   <th style=\"text-align:left;\"> month </th>\n   <th style=\"text-align:right;\"> temperature </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 51.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 51.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 51.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 51.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 51.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 51.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 51.9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 52.0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 52.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 52.3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 52.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 52.7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Death Valley </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:left;\"> 01 </td>\n   <td style=\"text-align:right;\"> 52.9 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n## Temperatures mapped onto y position\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/temp-normals-vs-time-1.svg){width=80%}\n:::\n:::\n\n\n\n\n## Temperatures mapped onto color\n\n::: {.move-down-1em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/four-locations-temps-by-month-1.svg){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Commonly used aesthetics\n\n![](https://clauswilke.com/dataviz/aesthetic_mapping_files/figure-html/common-aesthetics-1.png){width=90% fig-align=\"center\"}\n\n## The same data values can be mapped to different aesthetics\n\n![](https://clauswilke.com/dataviz/aesthetic_mapping_files/figure-html/basic-scales-example-1.png){width=90% fig-align=\"center\"}\n\n## We can use many different aesthetics at once\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/mtcars-five-scale-1.svg){width=70%}\n:::\n:::\n\n\n\n\n<!-- Segment ends here -->\n\n\n# Creating aesthetic mappings in ggplot\n\n## Getting the data\n\nAll examples will use the `temperatures` dataset:\n\n::: {.smaller-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemperatures <- read_csv(\"https://wilkelab.org/SDS366/datasets/tempnormals.csv\") |>\n  mutate(\n    location = factor(\n      location, levels = c(\"Death Valley\", \"Houston\", \"San Diego\", \"Chicago\")\n    )\n  ) |>\n  select(location, station_id, day_of_year, month, temperature)\n```\n:::\n\n\n\n:::\n\n## We define the mapping with `aes()`\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = temperatures,\n  mapping = aes(x = day_of_year, y = temperature, color = location)\n) + \n  geom_line()\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-temps-example-1.svg){width=65%}\n:::\n:::\n\n\n\n:::\n\n## We define the mapping with `aes()`\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = temperatures,\n  mapping = aes(x = day_of_year, y = location, color = temperature)\n) + \n  geom_point(size = 5)\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-temps-example2-1.svg){width=85%}\n:::\n:::\n\n\n\n:::\n\n## We frequently omit argument names\n\nLong form, all arguments are named:\n\n::: {.small-font}\n```r\nggplot(\n  data = temperatures,\n  mapping = aes(x = day_of_year, y = location, color = temperature)\n) + geom_point(size = 5)\n```\n:::\n\n::: {.fragment .move-down-1em}\nAbbreviated form, common arguments remain unnamed:\n\n::: {.small-font}\n```r\nggplot(temperatures, aes(day_of_year, location, color = temperature)) + \n  geom_point(size = 5)\n```\n:::\n:::\n\n## The geom determines how the data is shown\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(day_of_year, temperature, color = location)) + \n  geom_line()\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-temps-example5-1.svg){width=65%}\n:::\n:::\n\n\n\n:::\n\n## The geom determines how the data is shown\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(day_of_year, location, color = temperature)) + \n  geom_point(size = 5)\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-temps-example6-1.svg){width=85%}\n:::\n:::\n\n\n\n:::\n\n## The geom determines how the data is shown\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(month, temperature, color = location)) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-temps-example7-1.svg){width=75%}\n:::\n:::\n\n\n\n:::\n\n## The geom determines how the data is shown\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(month, temperature, fill = location)) + \n  geom_violin() + \n  facet_wrap(~location) # make separate panel per location\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-temps-example8-1.svg){width=90%}\n:::\n:::\n\n\n\n:::\n\n<!-- Segment ends here -->\n\n# Important: Distinguish between `color` and `fill`\n\n## Distinguish between `color` and `fill`\n\n::: {.move-down-1em}\n`color`<br>\nApplies color to points, lines, text, borders\n:::\n\n::: {.fragment .move-down-1em}\n`fill`<br>\nApplies color to any filled areas \n:::\n\n## Many geoms use both `color` and `fill`\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(month, temperature, color = location)) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-color-fill-1.svg){width=75%}\n:::\n:::\n\n\n\n:::\n\n## Many geoms use both `color` and `fill`\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(month, temperature, fill = location)) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-color-fill2-1.svg){width=75%}\n:::\n:::\n\n\n\n:::\n\n## Many geoms use both `color` and `fill`\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(month, temperature, color = location, fill = location)) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-color-fill3-1.svg){width=75%}\n:::\n:::\n\n\n\n:::\n\n## Aesthetics can also be used as parameters\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(month, temperature, fill = location)) + \n  geom_boxplot(color = \"steelblue\")\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-color-fill-params-1.svg){width=75%}\n:::\n:::\n\n\n\n:::\n\n## Aesthetics can also be used as parameters\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(temperatures, aes(month, temperature, color = location)) + \n  geom_boxplot(fill = \"steelblue\")\n```\n\n::: {.cell-output-display}\n![&nbsp;](aesthetic-mappings_files/figure-revealjs/ggplot-color-fill-params2-1.svg){width=75%}\n:::\n:::\n\n\n\n:::\n\n<!-- Segment ends here -->\n\n## Further reading\n\n- Fundamentals of Data Visualization: [Chapter 2: Visualizing data](https://clauswilke.com/dataviz/aesthetic-mapping.html)\n- Data Visualization—A Practical Introduction: [Chapter 3: Make a plot](https://socviz.co/makeplot.html#makeplot)\n- [**ggplot2** reference documentation](https://ggplot2.tidyverse.org/reference/index.html)\n- [**ggplot2** book](https://ggplot2-book.org/)\n- [**ggplot2** cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf)\n\n",
    "supporting": [
      "aesthetic-mappings_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}