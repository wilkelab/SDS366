{
  "hash": "25ba84492092785bf1e5f28bbea95ba0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing distributions 2\"\nauthor: \"Claus O. Wilke\"\ndate: last-modified\nformat: \n  revealjs:\n    theme:\n      - default\n      - Wilke-theme.scss\n    auto-stretch: false\n    chalkboard: true\nexecute:\n  fig-format: svg\n  fig-asp: 0.618\n  fig-width: 5.5\n---\n\n\n\n\n\n\n## Reminder: Density estimates visualize distributions\n\n:::: {.columns}\n\n::: {.column width=\"50%\" .small-font}\nMean temperatures in Lincoln, NE, in January 2016:\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|date       | mean temp|\n|:----------|---------:|\n|2016-01-01 |        24|\n|2016-01-02 |        23|\n|2016-01-03 |        23|\n|2016-01-04 |        17|\n|2016-01-05 |        29|\n|2016-01-06 |        33|\n|2016-01-07 |        30|\n|2016-01-08 |        25|\n|2016-01-09 |         9|\n|2016-01-10 |        11|\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.fragment .column width=\"50%\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-densities-january-1.svg){width=100%}\n:::\n:::\n\n\n\n::: {.fragment .move-up-1em}\nHow can we compare distributions across months?\n:::\n\n:::\n\n::::\n\n## A bad idea: Many overlapping density plots\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-densities-overlapping-1.svg){width=90%}\n:::\n:::\n\n\n\n\n## Another bad idea: Stacked density plots\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-densities-stacked-1.svg){width=90%}\n:::\n:::\n\n\n\n\n## Somewhat better: Small multiples\n\n::: {.move-up-half-em}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-densities-1.svg){width=95%}\n:::\n:::\n\n\n\n:::\n\n## Instead: Show values along y, conditions along x\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-boxplots-1.svg){width=80%}\n:::\n:::\n\n\n\n\n::: {.fragment .move-up-2em}\nA boxplot is a crude way of visualizing a distribution.\n:::\n\n## How to read a boxplot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/boxplot-schematic-1.svg){width=80%}\n:::\n:::\n\n\n\n\n## If you like density plots, consider violins\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-violins-1.svg){width=80%}\n:::\n:::\n\n\n\n\n::: {.fragment .move-up-2em}\nA violin plot is a density plot rotated 90 degrees and then mirrored.\n:::\n\n## How to read a violin plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/violin-schematic-1.svg){width=80%}\n:::\n:::\n\n\n\n\n## For small datasets, you can also use a strip chart\n\nAdvantage: Can see raw data points instead of abstract representation.\n\n::: {.fragment}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-stripchart-1.svg){width=70%}\n:::\n:::\n\n\n\n:::\n\n::: {.fragment .move-up-2em}\nHorizontal jittering may be necessary to avoid overlapping points.\n:::\n\n## For small datasets, you can also use a strip chart\n\nAdvantage: Can see raw data points instead of abstract representation.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-stripchart2-1.svg){width=70%}\n:::\n:::\n\n\n\n\n::: {.move-up-2em}\nHorizontal jittering may be necessary to avoid overlapping points.\n:::\n\n## For small datasets, you can also use a strip chart\n\nAdvantage: Can see raw data points instead of abstract representation.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-stripchart3-1.svg){width=70%}\n:::\n:::\n\n\n\n\n::: {.move-up-2em}\nHorizontal jittering may be necessary to avoid overlapping points.\n:::\n\n## We can also jitter points into violins\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-sina-1.svg){width=80%}\n:::\n:::\n\n\n\n\n::: {.fragment .move-up-2em}\nSuch plots are called sina plots, to honor [Sina Hadi Sohi.](https://clauswilke.com/dataviz/boxplots-violins.html#fig:lincoln-temp-sina)\n:::\n\n## But maybe there's hope for overlapping density plots?\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-densities-overlapping2-1.svg){width=80%}\n:::\n:::\n\n\n\n\n::: {.fragment .move-up-2em}\nHow about we stagger the densities vertically?\n:::\n\n## Vertically staggered density plots are called ridgelines\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-ridgeline-polished-1.svg){width=80%}\n:::\n:::\n\n\n\n\n::: {.fragment .move-up-2em}\nNotice the single fill color. More colors would be distracting.\n:::\n\n<!-- Segment ends here -->\n\n# Making boxplots, violins, etc. in **ggplot2**\n\n## Getting the data\n\n::: {.smaller-font}\nAll examples will use the `lincoln_temps` dataset:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlincoln_temps <- readRDS(url(\"https://wilkelab.org/SDS366/datasets/lincoln_temps.rds\"))\n\nlincoln_temps\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 366 × 4\n   date       month month_long mean_temp\n   <date>     <fct> <fct>          <int>\n 1 2016-01-01 Jan   January           24\n 2 2016-01-02 Jan   January           23\n 3 2016-01-03 Jan   January           23\n 4 2016-01-04 Jan   January           17\n 5 2016-01-05 Jan   January           29\n 6 2016-01-06 Jan   January           33\n 7 2016-01-07 Jan   January           30\n 8 2016-01-08 Jan   January           25\n 9 2016-01-09 Jan   January            9\n10 2016-01-10 Jan   January           11\n# ℹ 356 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## Making boxplots, violins, etc. in **ggplot2**\n\n::: {.center-text .move-down-1em}\nPlot type    | Geom                    | Notes\n:----------- | :-----------------      | :-------------------------\nboxplot      | `geom_boxplot()`        |\nviolin plot  | `geom_violin()`         |\nstrip chart  | `geom_point()`          | Jittering requires `position_jitter()`\nsina plot    | `geom_sina()`           | From package **ggforce**\nridgeline    | `geom_density_ridges()` | From package **ggridges**\n:::\n\n## Examples: Boxplot\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lincoln_temps, aes(x = month, y = mean_temp)) +\n  geom_boxplot(fill = \"skyblue\") \n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-examples-boxplot-1.svg){width=60%}\n:::\n:::\n\n\n\n:::\n\n## Examples: Violins\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lincoln_temps, aes(x = month, y = mean_temp)) +\n  geom_violin(fill = \"skyblue\") \n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-examples-violins-1.svg){width=60%}\n:::\n:::\n\n\n\n:::\n\n## Examples: Strip chart (no jitter)\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lincoln_temps, aes(x = month, y = mean_temp)) +\n  geom_point(size = 0.75)  # reduce point size to minimize overplotting \n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-examples-stripchart-1.svg){width=60%}\n:::\n:::\n\n\n\n:::\n\n## Examples: Strip chart (w/ jitter)\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lincoln_temps, aes(x = month, y = mean_temp)) +\n  geom_point(size = 0.75,  # reduce point size to minimize overplotting \n    position = position_jitter(\n      width = 0.15,  # amount of jitter in horizontal direction\n      height = 0     # amount of jitter in vertical direction (0 = none)\n    )\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-examples-stripchart-jitter-1.svg){width=60%}\n:::\n:::\n\n\n\n:::\n\n## Examples: Sina plot\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggforce) # for geom_sina()\n\nggplot(lincoln_temps, aes(x = month, y = mean_temp)) +\n  geom_violin(fill = \"skyblue\", color = NA) + # violins in background\n  geom_sina(size = 0.75) # sina jittered points in foreground\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-examples-sina-1.svg){width=60%}\n:::\n:::\n\n\n\n:::\n\n## Examples: Ridgeline plot\n\n::: {.small-font}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggridges) # for geom_density_ridges\n\nggplot(lincoln_temps, aes(x = mean_temp, y = month_long)) +\n  geom_density_ridges()\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-distributions-2_files/figure-revealjs/temps-examples-ridgeline-1.svg){width=60%}\n:::\n:::\n\n\n\n:::\n\n<!-- Segment ends here -->\n\n## Further reading\n\n- Fundamentals of Data Visualization: [Chapter 7: Visualizing many distributions at once](https://clauswilke.com/dataviz/boxplots-violins.html)\n- **ggplot2** reference documentation: [`geom_boxplot()`](https://ggplot2.tidyverse.org/reference/geom_histogram), [`geom_violin()`](https://ggplot2.tidyverse.org/reference/geom_violin), [`position_jitter()`](https://ggplot2.tidyverse.org/reference/position_jitter.html)\n- **ggforce** reference documentation: [`geom_sina()`](https://ggforce.data-imaginist.com/reference/geom_sina.html)\n- **ggridges** reference documentation: [`geom_density_ridges()`](https://wilkelab.org/ggridges/reference/geom_density_ridges.html)\n",
    "supporting": [
      "visualizing-distributions-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}