{
  "hash": "78164276ced82bd275b0981b05cbc95e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Redundant coding, text annotations\"\nauthor: \"Claus O. Wilke\"\ndate: last-modified\nformat: \n  revealjs:\n    theme:\n      - default\n      - Wilke-theme.scss\n    auto-stretch: false\n    chalkboard: true\nexecute:\n  fig-format: svg\n  fig-asp: 0.618\n  fig-width: 5.5\n---\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## Color encoding alone is not always sufficient\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/iris-scatter-one-shape-1.svg){width=75%}\n:::\n:::\n\n\n\n::: {.small-font .move-up-1em}\n*Iris virginica* and *Iris versicolor* are difficult to tell apart\n:::\n\n## {#iris-scatter-one-shape-cvd data-menu-title=\"CVD simulation of Iris plot\"}\n\n::: {.move-up-1em}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/iris-scatter-one-shape-cvd-1.svg){width=85%}\n:::\n:::\n\n\n:::\n\n::: {.small-font .move-up-1em}\nCVD simulation of preceding figure\n:::\n\n## Using both colors and shapes helps\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/iris-scatter-three-shapes-1.svg){width=75%}\n:::\n:::\n\n\n\n::: {.small-font .move-up-1em}\nNotice also that color assignment has been switched\n:::\n\n## {#iris-scatter-three-shapes-cvd data-menu-title=\"CVD simulation of Iris plot\"}\n\n::: {.move-up-1em}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/iris-scatter-three-shapes-cvd-1.svg){width=85%}\n:::\n:::\n\n\n:::\n\n::: {.small-font .move-up-1em}\nCVD simulation of preceding figure\n:::\n\n## Pay attention to legend order\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/tech-stocks-bad-legend-1.svg){width=75%}\n:::\n:::\n\n\n\n::: {.small-font .move-up-1em}\nLegend order **does not** match visual order of the lines\n:::\n\n## Pay attention to legend order\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/tech-stocks-good-legend-1.svg){width=75%}\n:::\n:::\n\n\n\n::: {.small-font .move-up-1em}\nLegend order **does** match visual order of the lines\n:::\n\n## {#tech-stocks-good-legend-cvd data-menu-title=\"CVD simulation of tech stock plot\"}\n\n::: {.move-up-1em}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/tech-stocks-good-legend-cvd-1.svg){width=85%}\n:::\n:::\n\n\n:::\n\n::: {.small-font .move-up-1em}\nCVD simulation of preceding figure\n:::\n\n## Even better: Don't use a legend at all\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/tech-stocks-good-no-legend-1.svg){width=75%}\n:::\n:::\n\n\n\n::: {.small-font .move-up-1em}\nThis technique is called \"direct labeling\"\n:::\n\n## Direct labeling the Iris scatter plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/iris-scatter-with-ellipses-1.svg){width=60%}\n:::\n:::\n\n\n\n::: {.small-font .move-up-1em}\nThe ellipses help guide the eye\n:::\n\n## Label only a subset if there are too many items to label\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/texas-counties-log-1.svg){width=90%}\n:::\n:::\n\n\n\n<!-- Segment ends here -->\n\n# Direct labeling in R\n\n## 1. Secondary axis trick\n\n::: {.small-font}\nData preparation:\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntech_stocks <- read_csv(\"https://wilkelab.org/SDS366/datasets/tech_stocks.csv\") |>\n  mutate(date = ymd(date)) |>\n  select(company, date, price_indexed)\n\ntech_stocks\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9,569 × 3\n   company  date       price_indexed\n   <chr>    <date>             <dbl>\n 1 Alphabet 2017-06-02          342.\n 2 Alphabet 2017-06-01          339.\n 3 Alphabet 2017-05-31          338.\n 4 Alphabet 2017-05-30          342.\n 5 Alphabet 2017-05-26          341.\n 6 Alphabet 2017-05-25          340.\n 7 Alphabet 2017-05-24          335.\n 8 Alphabet 2017-05-23          333.\n 9 Alphabet 2017-05-22          330.\n10 Alphabet 2017-05-19          327.\n# ℹ 9,559 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n## 1. Secondary axis trick\n\n::: {.small-font}\nExtract most recent values:\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntech_stocks_last <- tech_stocks |>\n  filter(date == max(date))\n\ntech_stocks_last\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  company   date       price_indexed\n  <chr>     <date>             <dbl>\n1 Alphabet  2017-06-02          342.\n2 Apple     2017-06-02          194.\n3 Facebook  2017-06-02          554.\n4 Microsoft 2017-06-02          252.\n```\n\n\n:::\n:::\n\n\n:::\n\n\n## 1. Secondary axis trick\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(tech_stocks) +\n  aes(x = date, y = price_indexed) +\n  geom_line(aes(color = company), na.rm = TRUE) +\n  scale_x_date(\n    limits = c(\n      ymd(\"2012-06-01\"),\n      ymd(\"2017-05-31\")\n    ),\n    expand = c(0, 0)\n  ) + \n  scale_y_continuous(\n    limits = c(0, 560),\n    expand = c(0, 0)\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/tech-stock-sec-axis-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.small-font}\nSide remark: The default legend order doesn't match the data\n:::\n\n## 1. Secondary axis trick\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(tech_stocks) +\n  aes(x = date, y = price_indexed) +\n  geom_line(aes(color = company), na.rm = TRUE) +\n  scale_x_date(\n    limits = c(\n      ymd(\"2012-06-01\"),\n      ymd(\"2017-05-31\")\n    ),\n    expand = c(0, 0)\n  ) + \n  scale_y_continuous(\n    limits = c(0, 560),\n    expand = c(0, 0),\n    sec.axis = dup_axis(\n      breaks = tech_stocks_last$price_indexed,\n      labels = tech_stocks_last$company,\n      name = NULL\n    )\n  ) +\n  guides(color = \"none\")\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/tech-stock-sec-axis2-1.svg)\n:::\n:::\n\n\n:::\n\n## 2. Manual labeling with `geom_text()`\n\n::: {.small-font}\nThe raw input data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n```\n\n\n:::\n:::\n\n\n:::\n\n## 2. Manual labeling with `geom_text()`\n\n::: {.small-font}\nManually create table with label positions:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_labels <- tibble(\n  Species = c(\"setosa\", \"virginica\", \"versicolor\"),\n  Sepal.Width = c(4.2, 3.76, 2.08),\n  Sepal.Length = c(5.7, 7, 5.1),\n  label = c(\"Iris setosa\", \"Iris virginica\", \"Iris versicolor\"),\n  hjust = c(0, 0.5, 0),\n  vjust = c(0, 0.5, 1)\n)\n\niris_labels\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  Species    Sepal.Width Sepal.Length label           hjust vjust\n  <chr>            <dbl>        <dbl> <chr>           <dbl> <dbl>\n1 setosa            4.2           5.7 Iris setosa       0     0  \n2 virginica         3.76          7   Iris virginica    0.5   0.5\n3 versicolor        2.08          5.1 Iris versicolor   0     1  \n```\n\n\n:::\n:::\n\n\n:::\n\n## 2. Manual labeling with `geom_text()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(iris) +\n  aes(Sepal.Length, Sepal.Width, color = Species) +\n  geom_point(aes(shape = Species))\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/iris-manual-1.svg)\n:::\n:::\n\n\n:::\n\n## 2. Manual labeling with `geom_text()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(iris) +\n  aes(Sepal.Length, Sepal.Width, color = Species) +\n  geom_point(aes(shape = Species)) +\n  geom_text(\n    data = iris_labels,\n    aes(\n      label = label,\n      hjust = hjust, vjust = vjust\n    ),\n    size = 14, size.unit = \"pt\" # 14pt font\n  ) +\n  guides(color = \"none\", shape = \"none\")\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/iris-manual2-1.svg)\n:::\n:::\n\n\n:::\n\n## 2. Manual labeling with `geom_text()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(iris) +\n  aes(Sepal.Length, Sepal.Width, color = Species) +\n  geom_point(aes(shape = Species)) +\n  geom_text(\n    data = iris_labels,\n    aes(\n      label = label,\n      hjust = hjust, vjust = vjust\n    ),\n    size = 14, size.unit = \"pt\" # 14pt font\n  ) +\n  stat_ellipse(size = 0.5) + \n  guides(color = \"none\", shape = \"none\")\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/iris-manual3-1.svg)\n:::\n:::\n\n\n:::\n\n## 3. Automatic labeling with `geom_text_repel()`\n\n::: {.small-font}\nPrepare data:\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars_named <- mtcars |>\n  rownames_to_column(\"car\") |>\n  select(car, weight = wt, mpg)\n\nmtcars_named\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   car weight  mpg\n1            Mazda RX4  2.620 21.0\n2        Mazda RX4 Wag  2.875 21.0\n3           Datsun 710  2.320 22.8\n4       Hornet 4 Drive  3.215 21.4\n5    Hornet Sportabout  3.440 18.7\n6              Valiant  3.460 18.1\n7           Duster 360  3.570 14.3\n8            Merc 240D  3.190 24.4\n9             Merc 230  3.150 22.8\n10            Merc 280  3.440 19.2\n11           Merc 280C  3.440 17.8\n12          Merc 450SE  4.070 16.4\n13          Merc 450SL  3.730 17.3\n14         Merc 450SLC  3.780 15.2\n15  Cadillac Fleetwood  5.250 10.4\n16 Lincoln Continental  5.424 10.4\n17   Chrysler Imperial  5.345 14.7\n18            Fiat 128  2.200 32.4\n19         Honda Civic  1.615 30.4\n20      Toyota Corolla  1.835 33.9\n21       Toyota Corona  2.465 21.5\n22    Dodge Challenger  3.520 15.5\n23         AMC Javelin  3.435 15.2\n24          Camaro Z28  3.840 13.3\n25    Pontiac Firebird  3.845 19.2\n26           Fiat X1-9  1.935 27.3\n27       Porsche 914-2  2.140 26.0\n28        Lotus Europa  1.513 30.4\n29      Ford Pantera L  3.170 15.8\n30        Ferrari Dino  2.770 19.7\n31       Maserati Bora  3.570 15.0\n32          Volvo 142E  2.780 21.4\n```\n\n\n:::\n:::\n\n\n:::\n\n## 3. Automatic labeling with `geom_text_repel()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(mtcars_named, aes(weight, mpg)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/mtcars-plot1-1.svg)\n:::\n:::\n\n\n:::\n\n## 3. Automatic labeling with `geom_text_repel()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(mtcars_named, aes(weight, mpg)) +\n  geom_point() +\n  geom_text(aes(label = car))\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/mtcars-plot2-1.svg)\n:::\n:::\n\n\n:::\n\n## 3. Automatic labeling with `geom_text_repel()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nggplot(mtcars_named, aes(weight, mpg)) +\n  geom_point() +\n  geom_text(aes(label = car), hjust = 0)\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/mtcars-plot3-1.svg)\n:::\n:::\n\n\n:::\n\n## 3. Automatic labeling with `geom_text_repel()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n\nggplot(mtcars_named, aes(weight, mpg)) +\n  geom_point() +\n  geom_text_repel(\n    aes(label = car),\n    max.overlaps = Inf\n  )  \n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/mtcars-plot4-1.svg)\n:::\n:::\n\n\n:::\n\n## 3. Automatic labeling with `geom_text_repel()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nset.seed(6643)\n\nmtcars_named |>\n  mutate(\n    # randomly exclude 50% of the labels\n    car = ifelse(runif(n()) < 0.5, \"\", car)\n  ) |> \n  ggplot(aes(weight, mpg)) +\n  geom_point() +\n  geom_text_repel(\n    aes(label = car),\n    max.overlaps = Inf\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/mtcars-plot5-1.svg)\n:::\n:::\n\n\n:::\n\n## 3. Automatic labeling with `geom_text_repel()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nset.seed(6644)\n\nmtcars_named |>\n  mutate(\n    # randomly exclude 50% of the labels\n    car = ifelse(runif(n()) < 0.5, \"\", car)\n  ) |> \n  ggplot(aes(weight, mpg)) +\n  geom_point() +\n  geom_text_repel(\n    aes(label = car),\n    max.overlaps = Inf\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/mtcars-plot6-1.svg)\n:::\n:::\n\n\n:::\n\n## 3. Automatic labeling with `geom_text_repel()`\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column' output-width='100%'}\n\n```{.r .cell-code}\nset.seed(6644)\n\nmtcars_named |>\n  mutate(\n    # randomly exclude 50% of the labels\n    car = ifelse(runif(n()) < 0.5, \"\", car)\n  ) |> \n  ggplot(aes(weight, mpg)) +\n  geom_point() +\n  geom_text_repel(\n    aes(label = car),\n    max.overlaps = Inf,\n    box.padding = 0.7\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](redundant-coding_files/figure-revealjs/mtcars-plot7-1.svg)\n:::\n:::\n\n\n:::\n\n::: {.small-font .move-up-1em}\n`box.padding` controls how far labels are placed from data points\n:::\n\n<!-- Segment ends here -->\n\n## Further reading\n\n- Fundamentals of Data Visualization: [Chapter 20: Redundant coding](https://clauswilke.com/dataviz/redundant-coding.html)\n- **ggplot2** reference documentation: [`geom_text()`](https://ggplot2.tidyverse.org/reference/geom_text.html)\n- **ggrepel** documentation: [Examples](https://ggrepel.slowkow.com/articles/examples.html#examples-1)\n- **ggrepel** reference documentation:\n[`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html)\n\n\n\n",
    "supporting": [
      "redundant-coding_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}