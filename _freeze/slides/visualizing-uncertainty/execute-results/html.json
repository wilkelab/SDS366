{
  "hash": "93fde016f3eb1d04856b3fcb0eaef0a5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing Uncertainty\"\nauthor: \"Claus O. Wilke\"\ndate: last-modified\nformat: \n  revealjs:\n    theme:\n      - default\n      - Wilke-theme.scss\n    auto-stretch: false\n    chalkboard: true\nexecute:\n  fig-format: svg\n  fig-asp: 0.618\n  fig-width: 5.5\n---\n\n\n\n\n\n## We all know how to visualize uncertainty, right?\n\n::: {.move-down-1em}\n![](https://clauswilke.com/dataviz/visualizing_uncertainty_files/figure-html/butterfat-bars-1.png){width=\"75%\" fig-align=\"center\"}\n:::\n\n::: {.absolute-bottom-right .tiny-font}\nMilk butterfat contents by cattle breed. \nSource: Canadian Record of Performance for Purebred Dairy Cattle\n:::\n\n## We all know how to visualize uncertainty, right?\n\n::: {.move-down-1em}\n![](https://clauswilke.com/dataviz/visualizing_uncertainty_files/figure-html/median-age-income-1.png){width=\"65%\" fig-align=\"center\"}\n:::\n\n::: {.absolute-bottom-right .tiny-font}\nIncome versus age for 67 counties in Pennsylvania. \nSource: 2015 Five-Year American Community Survey\n:::\n\n## We all know how to visualize uncertainty, right?\n\n::: {.move-down-1em}\n![](../assets/visualizing-uncertainty/blue-jays-static.png){width=\"65%\" fig-align=\"center\"}\n:::\n\n::: {.absolute-bottom-right .tiny-font}\nHead length versus body mass for male blue jays. Data source: Keith Tarvin, Oberlin College\n:::\n\n## These commonly used visualizations have problems\n\n\n::: {.incremental}\n- It's often not clear what exactly the visualizations represent\n- Even if we know, we can have difficulty interpreting what we see\n:::\n\n## It's often not clear what the visualizations represent\n\n::: {.fragment}\nIn particular, error bars can represent many different quantities\n:::\n\n## It's often not clear what the visualizations represent\n\n\n<!-- Segment ends here -->\n\n# Uncertainty visualizations in R\n\n## Making a plot with error bars\n\n::: {.fragment .small-font}\nExample: Relationship between life expectancy and GDP per capita\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-uncertainty_files/figure-revealjs/gapminder-regressions-1.svg){width=60%}\n:::\n:::\n\n\n:::\n\n## Making a plot with error bars\n\n::: {.small-font}\nExample: Relationship between life expectancy and GDP per capita\n:::\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-uncertainty_files/figure-revealjs/gapminder-regressions2-1.svg){width=100%}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![&nbsp;](visualizing-uncertainty_files/figure-revealjs/gapminder-summary-1.svg){width=100%}\n:::\n:::\n\n\n:::\n\n::::\n\n## Making a plot with error bars\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_data <- gapminder |>\n  nest(data = -c(continent, year))\n\nlm_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 3\n   continent  year data             \n   <fct>     <int> <list>           \n 1 Asia       1952 <tibble [33 × 4]>\n 2 Asia       1957 <tibble [33 × 4]>\n 3 Asia       1962 <tibble [33 × 4]>\n 4 Asia       1967 <tibble [33 × 4]>\n 5 Asia       1972 <tibble [33 × 4]>\n 6 Asia       1977 <tibble [33 × 4]>\n 7 Asia       1982 <tibble [33 × 4]>\n 8 Asia       1987 <tibble [33 × 4]>\n 9 Asia       1992 <tibble [33 × 4]>\n10 Asia       1997 <tibble [33 × 4]>\n# ℹ 50 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n## Making a plot with error bars\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_data <- gapminder |>\n  nest(data = -c(continent, year)) |>\n  mutate(\n    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x))\n  )\n\nlm_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 4\n   continent  year data              fit   \n   <fct>     <int> <list>            <list>\n 1 Asia       1952 <tibble [33 × 4]> <lm>  \n 2 Asia       1957 <tibble [33 × 4]> <lm>  \n 3 Asia       1962 <tibble [33 × 4]> <lm>  \n 4 Asia       1967 <tibble [33 × 4]> <lm>  \n 5 Asia       1972 <tibble [33 × 4]> <lm>  \n 6 Asia       1977 <tibble [33 × 4]> <lm>  \n 7 Asia       1982 <tibble [33 × 4]> <lm>  \n 8 Asia       1987 <tibble [33 × 4]> <lm>  \n 9 Asia       1992 <tibble [33 × 4]> <lm>  \n10 Asia       1997 <tibble [33 × 4]> <lm>  \n# ℹ 50 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n## Making a plot with error bars\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_data <- gapminder |>\n  nest(data = -c(continent, year)) |>\n  mutate(\n    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),\n    tidy_out = map(fit, tidy)\n  )\n\nlm_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 5\n   continent  year data              fit    tidy_out        \n   <fct>     <int> <list>            <list> <list>          \n 1 Asia       1952 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n 2 Asia       1957 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n 3 Asia       1962 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n 4 Asia       1967 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n 5 Asia       1972 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n 6 Asia       1977 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n 7 Asia       1982 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n 8 Asia       1987 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n 9 Asia       1992 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n10 Asia       1997 <tibble [33 × 4]> <lm>   <tibble [2 × 5]>\n# ℹ 50 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n## Making a plot with error bars\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_data <- gapminder |>\n  nest(data = -c(continent, year)) |>\n  mutate(\n    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),\n    tidy_out = map(fit, tidy)\n  ) |>\n  unnest(cols = tidy_out)\n\nlm_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 120 × 9\n   continent  year data     fit    term     estimate std.error statistic p.value\n   <fct>     <int> <list>   <list> <chr>       <dbl>     <dbl>     <dbl>   <dbl>\n 1 Asia       1952 <tibble> <lm>   (Interc…    15.8       9.27      1.71 9.78e-2\n 2 Asia       1952 <tibble> <lm>   log(gdp…     4.16      1.25      3.33 2.28e-3\n 3 Asia       1957 <tibble> <lm>   (Interc…    18.1       9.70      1.86 7.20e-2\n 4 Asia       1957 <tibble> <lm>   log(gdp…     4.17      1.28      3.26 2.71e-3\n 5 Asia       1962 <tibble> <lm>   (Interc…    16.6       9.52      1.74 9.11e-2\n 6 Asia       1962 <tibble> <lm>   log(gdp…     4.59      1.24      3.72 7.94e-4\n 7 Asia       1967 <tibble> <lm>   (Interc…    19.8       9.05      2.19 3.64e-2\n 8 Asia       1967 <tibble> <lm>   log(gdp…     4.50      1.15      3.90 4.77e-4\n 9 Asia       1972 <tibble> <lm>   (Interc…    21.9       8.14      2.69 1.13e-2\n10 Asia       1972 <tibble> <lm>   log(gdp…     4.44      1.01      4.41 1.16e-4\n# ℹ 110 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n## Making a plot with error bars\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_data <- gapminder |>\n  nest(data = -c(continent, year)) |>\n  mutate(\n    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),\n    tidy_out = map(fit, tidy)\n  ) |>\n  unnest(cols = tidy_out) |>\n  select(-fit, -data)\n\nlm_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 120 × 7\n   continent  year term           estimate std.error statistic  p.value\n   <fct>     <int> <chr>             <dbl>     <dbl>     <dbl>    <dbl>\n 1 Asia       1952 (Intercept)       15.8       9.27      1.71 0.0978  \n 2 Asia       1952 log(gdpPercap)     4.16      1.25      3.33 0.00228 \n 3 Asia       1957 (Intercept)       18.1       9.70      1.86 0.0720  \n 4 Asia       1957 log(gdpPercap)     4.17      1.28      3.26 0.00271 \n 5 Asia       1962 (Intercept)       16.6       9.52      1.74 0.0911  \n 6 Asia       1962 log(gdpPercap)     4.59      1.24      3.72 0.000794\n 7 Asia       1967 (Intercept)       19.8       9.05      2.19 0.0364  \n 8 Asia       1967 log(gdpPercap)     4.50      1.15      3.90 0.000477\n 9 Asia       1972 (Intercept)       21.9       8.14      2.69 0.0113  \n10 Asia       1972 log(gdpPercap)     4.44      1.01      4.41 0.000116\n# ℹ 110 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n## Making a plot with error bars\n\n::: {.tiny-font}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_data <- gapminder |>\n  nest(data = -c(continent, year)) |>\n  mutate(\n    fit = map(data, ~lm(lifeExp ~ log(gdpPercap), data = .x)),\n    tidy_out = map(fit, tidy)\n  ) |>\n  unnest(cols = tidy_out) |>\n  select(-fit, -data) |>\n  filter(term != \"(Intercept)\", continent != \"Oceania\")\n\nlm_data\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 48 × 7\n   continent  year term           estimate std.error statistic       p.value\n   <fct>     <int> <chr>             <dbl>     <dbl>     <dbl>         <dbl>\n 1 Asia       1952 log(gdpPercap)     4.16     1.25       3.33 0.00228      \n 2 Asia       1957 log(gdpPercap)     4.17     1.28       3.26 0.00271      \n 3 Asia       1962 log(gdpPercap)     4.59     1.24       3.72 0.000794     \n 4 Asia       1967 log(gdpPercap)     4.50     1.15       3.90 0.000477     \n 5 Asia       1972 log(gdpPercap)     4.44     1.01       4.41 0.000116     \n 6 Asia       1977 log(gdpPercap)     4.87     1.03       4.75 0.0000442    \n 7 Asia       1982 log(gdpPercap)     4.78     0.852      5.61 0.00000377   \n 8 Asia       1987 log(gdpPercap)     5.17     0.727      7.12 0.0000000531 \n 9 Asia       1992 log(gdpPercap)     5.09     0.649      7.84 0.00000000760\n10 Asia       1997 log(gdpPercap)     5.11     0.628      8.15 0.00000000335\n# ℹ 38 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n## Making a plot with error bars\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(lm_data) +\n  aes(\n    x = year, y = estimate,\n    ymin = estimate - 1.96*std.error,\n    ymax = estimate + 1.96*std.error,\n    color = continent\n  ) +\n  geom_pointrange(\n    position = position_dodge(width = 1)\n  ) +\n  scale_x_continuous(\n    breaks = unique(gapminder$year)\n  ) + \n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-uncertainty_files/figure-revealjs/gapminder-model-1.svg){width=100%}\n:::\n:::\n\n\n:::\n\n## Half-eyes, gradient intervals, etc\n\n::: {.fragment .small-font}\nThe **ggdist** package provides many different visualizations of uncertainty\n:::\n\n::: {.fragment .tiny-font}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggdist)\nlibrary(distributional) # for dist_normal()\n\nlm_data |>\n  filter(year == 1952) |>\n  mutate(\n    continent = \n      fct_reorder(continent, estimate) \n  ) |>\n  ggplot(aes(x = estimate, y = continent)) +\n  stat_dist_halfeye(\n    aes(dist = dist_normal(\n      mu = estimate, sigma = std.error\n    )),\n    point_size = 4\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-uncertainty_files/figure-revealjs/gapminder-halfeye-1.svg){width=100%}\n:::\n:::\n\n\n:::\n\n## Half-eyes, gradient intervals, etc\n\n::: {.small-font}\nThe **ggdist** package provides many different visualizations of uncertainty\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggdist)\nlibrary(distributional) # for dist_normal()\n\nlm_data |>\n  filter(year == 1952) |>\n  mutate(\n    continent = \n      fct_reorder(continent, estimate) \n  ) |>\n  ggplot(aes(x = estimate, y = continent)) +\n  stat_dist_gradientinterval(\n    aes(dist = dist_normal(\n      mu = estimate, sigma = std.error\n    )),\n    point_size = 4,\n    fill = \"skyblue\"\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-uncertainty_files/figure-revealjs/gapminder-gradinterval-1.svg){width=100%}\n:::\n:::\n\n\n:::\n\n## Half-eyes, gradient intervals, etc\n\n::: {.small-font}\nThe **ggdist** package provides many different visualizations of uncertainty\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggdist)\nlibrary(distributional) # for dist_normal()\n\nlm_data |>\n  filter(year == 1952) |>\n  mutate(\n    continent = \n      fct_reorder(continent, estimate) \n  ) |>\n  ggplot(aes(x = estimate, y = continent)) +\n  stat_dist_dotsinterval(\n    aes(dist = dist_normal(\n      mu = estimate, sigma = std.error\n    )),\n    point_size = 4,\n    fill = \"skyblue\",\n    quantiles = 20\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-uncertainty_files/figure-revealjs/gapminder-quantiledots-1.svg){width=100%}\n:::\n:::\n\n\n:::\n\n## Half-eyes, gradient intervals, etc\n\n::: {.small-font}\nThe **ggdist** package provides many different visualizations of uncertainty\n:::\n\n::: {.tiny-font}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nlibrary(ggdist)\nlibrary(distributional) # for dist_normal()\n\nlm_data |>\n  filter(year == 1952) |>\n  mutate(\n    continent = \n      fct_reorder(continent, estimate) \n  ) |>\n  ggplot(aes(x = estimate, y = continent)) +\n  stat_dist_dotsinterval(\n    aes(dist = dist_normal(\n      mu = estimate, sigma = std.error\n    )),\n    point_size = 4,\n    fill = \"skyblue\",\n    quantiles = 10\n  )\n```\n\n::: {.cell-output-display}\n![&nbsp;](visualizing-uncertainty_files/figure-revealjs/gapminder-quantiledots2-1.svg){width=100%}\n:::\n:::\n\n\n:::\n\n<!-- Segment ends here -->\n\n## Further reading\n\n- Fundamentals of Data Visualization: [Chapter 16: Visualizing uncertainty](https://clauswilke.com/dataviz/visualizing-uncertainty.html)\n- Data Visualization—A Practical Introduction: [Chapter 6.6: Grouped analysis and list columns](https://socviz.co/modeling.html#grouped-analysis-and-list-columns)\n- Data Visualization—A Practical Introduction: [Chapter 6.7: Plot marginal effects](https://socviz.co/modeling.html#plot-marginal-effects)\n- **ggdist** reference documentation: https://mjskay.github.io/ggdist/index.html\n- **ggdist** vignette: [Frequentist uncertainty visualization](https://mjskay.github.io/ggdist/articles/freq-uncertainty-vis.html)\n",
    "supporting": [
      "visualizing-uncertainty_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}