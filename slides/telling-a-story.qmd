---
title: "Telling a story"
author: "Claus O. Wilke"
format: 
  revealjs:
    theme:
      - default
      - Wilke-theme.scss
    auto-stretch: false
execute:
  fig-format: svg
  fig-asp: 0.618
  fig-width: 5.5
---

```{r}
#| include: false
library(tidyverse)
library(cowplot)
library(colorspace)

# ggplot2 settings so plots scale well for slide size 
theme_set(theme_gray(14))
update_geom_defaults("point", list(size = 2))
update_geom_defaults("line", list(linewidth = 1))

preprints <- read_csv("https://wilkelab.org/SDS366/datasets/preprints.csv")
```

## How did I get to teach data visualization?

![](../assets/telling-a-story/cowplot-logo.svg){.fragment .absolute  top="22%" left="13%" width="30%" }

![](https://clauswilke.com/dataviz/cover.png){.fragment .absolute  top="20%" left="53%" width="30%" style="box-shadow: 3px 5px 3px 1px #00000080;"}

## What is a story?

<br>

::: {.fragment}
A story is a collection of observations, facts, or events presented in a specific order such that they create an [emotional reaction.]{.highlight}
:::


## Every story needs an arc

::: {.fragment .center-text}
Opening
:::

::: {.fragment .center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: 0; margin-bottom: -0.3em;"}

Challenge
:::

::: {.fragment .center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: 0; margin-bottom: -0.3em;"}

Action
:::

::: {.fragment .center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: 0; margin-bottom: -0.3em;"}

Resolution
:::

## Every story needs an arc

::: {.center-text}
Opening
:::

::: {.center-text .highlight}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: 0; margin-bottom: -0.3em;"}

Challenge
:::

::: {.center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: 0; margin-bottom: -0.3em;"}

Action
:::

::: {.center-text .highlight}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: 0; margin-bottom: -0.3em;"}

Resolution
:::

::: {.absolute-bottom-right .small-font}
Challenge and resolution are<br>the two most important parts
:::

## Mapping my story onto this format

::: {.fragment .small-font .move-down-1em}
**Opening:** We need to make many data visualizations in my lab
:::

::: {.fragment .small-font .move-down-1em}
**Challenge:** I end up telling my students the same things over and over
:::

::: {.fragment .small-font .move-down-1em}
**Action:** I go and write a book about data visualization
:::

::: {.fragment .small-font .move-down-1em}
**Resolution:** The book is written. But now I teach the material, so I still keep saying the same things over and over
:::

## Other story structures

::: {.fragment .center-text .move-up-half-em}
Action
:::

::: {.fragment .center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: -0.1em; margin-bottom: -0.5em;"}

Background
:::

::: {.fragment .center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: -0.1em; margin-bottom: -0.5em;"}

Development
:::

::: {.fragment .center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: -0.1em; margin-bottom: -0.5em;"}

Climax
:::

::: {.fragment .center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: -0.1em; margin-bottom: -0.5em;"}

Ending
:::

::: {.fragment .absolute-bottom-right .small-font}
(Better for action movies<br>than for scientific reports)
:::

## Mapping my story onto this format

::: {.fragment .move-down-1em .small-font}
**Action:** In May 2017, I embark on a major project: Write a book on data visualization
:::

::: {.fragment .move-down-1em .small-font}
**Background:** I do this because we need to make many data visualizations in my lab, and I end up telling my students the same things over and over
:::

::: {.fragment .move-down-1em .small-font}
**Development:** Writing the book takes me almost two years; along the way, I add many features to ggplot2 and become a member of the ggplot2 team
:::

::: {.fragment .move-down-1em .small-font}
**Climax:** The book is released in April 2019
:::

::: {.fragment .move-down-1em .small-font}
**Ending:** Now I'm a dataviz teacher
:::

## Other story structures

<br><br>

::: {.fragment .center-text}
Lead
:::

::: {.fragment .center-text}
![](../assets/telling-a-story/arrow.svg){width="3%" style="margin-top: 0; margin-bottom: -0.3em;"}

Development
:::

::: {.fragment .absolute-bottom-right .small-font}
(Commonly used in newspaper articles)
:::

## Mapping my story onto this format

::: {.fragment .small-font .move-down-1em}
**Lead:** Because I see the need for more education in data visualization, I have written an entire book about the topic
:::

::: {.fragment .small-font .move-down-1em}
**Development:** I had previously written an R package to improve figure design, but it wasn't sufficient: Good judgement cannot be automated
:::

::: {.fragment .small-font .move-down-1em}
So I wrote a book; the book is entirely about concepts, not about coding, and it is meant as a resource for anybody doing data visualizations, regardless of their preferred visualization software
:::

<!-- Segment ends here -->

# Telling a story with figures

## Example: Preprints in biology

```{r}
#| label: preprints-part1
#| echo: false
#| fig-width: 7.5
#| fig-cap: "&nbsp;"
#| out-width: "80%"
df_preprints <- preprints |> 
  filter(archive %in% c("bioRxiv", "arXiv q-bio")) |>
  filter(count > 0)
df_final <- filter(df_preprints, date == max(date))
df_final_qbio <- filter(df_final, archive == "arXiv q-bio")

df_preprints |>
  filter(archive == "arXiv q-bio") |>
  ggplot() +
  aes(date, count, color = archive) + 
  geom_line(linewidth = 0.75) +
  scale_y_log10(
    limits = c(40, 400),
    breaks = c(50, 100, 200, 300),
    expand = c(0, 0),
    name = "preprints / month",
    sec.axis = dup_axis(
      breaks = df_final_qbio$count,
      labels = df_final_qbio$archive,
      name = NULL
    )
  ) + 
  scale_x_date(name = "year", expand = c(0, 0)) +
  scale_color_manual(values = c("#D55E00", "#0072B2"), guide = "none") +
  theme_minimal_grid() +
  theme(
    axis.ticks.y.right = element_blank(),
    axis.text.y.right = element_text(
      size = 14,
      margin = margin(0, 0, 0, 0)
    )
  )
```

::: {.absolute-bottom-right}
Opening
:::

## Example: Preprints in biology

```{r}
#| label: preprints-part2
#| echo: false
#| fig-width: 7.5
#| fig-cap: "&nbsp;"
#| out-width: "80%"
df_preprints |>
  filter(archive == "arXiv q-bio") |>
  ggplot() +
  aes(date, count, color = archive) + 
  geom_line(linewidth = 0.75) +
  scale_y_log10(
    limits = c(40, 400),
    breaks = c(50, 100, 200, 300),
    expand = c(0, 0),
    name = "preprints / month",
    sec.axis = dup_axis(
      breaks = df_final_qbio$count,
      labels = df_final_qbio$archive,
      name = NULL
    )
  ) + 
  scale_x_date(name = "year", expand = c(0, 0)) +
  scale_color_manual(values = c("#D55E00", "#0072B2"), guide = "none") +
  theme_minimal_grid() +
  theme(
    axis.ticks.y.right = element_blank(),
    axis.text.y.right = element_text(
      size = 14,
      margin = margin(0, 0, 0, 0)
    )
  )
```

[What happened in 2014 to curtail the growth?]{.small-font style="position: absolute; top: 42%; left: 58%; width: 3.8in; background: white;"}


::: {.absolute-bottom-right}
Challenge
:::

## Example: Preprints in biology

```{r}
#| label: preprints-part3
#| echo: false
#| fig-width: 7.5
#| fig-cap: "&nbsp;"
#| out-width: "80%"
ggplot(df_preprints, aes(date, count, color = archive)) + 
  geom_line(linewidth = 0.75) +
  scale_y_log10(
    limits = c(29, 1600),
    breaks = c(30, 100, 300, 1000),
    expand = c(0, 0),
    name = "preprints / month",
    sec.axis = dup_axis(
      breaks = df_final$count,
      labels = df_final$archive,
      name = NULL
    )
  ) + 
  scale_x_date(name = "year", expand = c(0, 0)) +
  scale_color_manual(values = c("#D55E00", "#0072B2"), guide = "none") +
  theme_minimal_grid() +
  theme(
    axis.ticks.y.right = element_blank(),
    axis.text.y.right = element_text(
      size = 14,
      margin = margin(0, 0, 0, 0)
    )
  )
```

[bioRxiv opened in 2014]{.small-font style="position: absolute; top: 60%; left: 62%; width: 3.8in; background: white;"}


::: {.absolute-bottom-right}
Resolution
:::

## Keep in mind

::: {.incremental}
- Every figure needs a clear purpose within the story arc
- A complete arc will usually require at least two figures
:::

## Prepare figures that make a clear point

:::{.fragment}
```{r}
#| label: arrival-delay-vs-distance
#| echo: false
#| message: false
#| fig-width: 7.5
#| fig-cap: "&nbsp;"
#| out-width: "80%"
library(nycflights13)

carrier_names <- tibble(
  carrier = c("9E", "AA", "B6", "DL", "EV", "MQ", "UA", "US", "WN", "--"),
  name = c("Endeavor", "American", "JetBlue", "Delta", "ExpressJet", "Envoy", "United", "US Airways", "Southwest", "other")
)

flights_clean <- flights |>
  filter(!dest %in% c("HNL", "ANC")) |> # remove Honolulu and Anchorage because they're so far away
  mutate(carrier = ifelse(carrier %in% c("DL", "AA"), carrier, "--")) |>
  left_join(carrier_names, by = "carrier") |>
  select(name, distance, arr_delay, dest) |>
  na.omit() |>
  mutate(
    name = factor(name, levels = c("American", "Delta", "other"))
  )

delay <- flights_clean |>
  group_by(name, dest) |>
  summarize(
    count = n(),
    distance = mean(distance, na.rm = TRUE),
    arr_delay = mean(arr_delay, na.rm = TRUE)
)

p_delay_distance <- ggplot(delay) +
  aes(x = distance, y = arr_delay, color = name, fill = name) +
  geom_point(aes(size = count), alpha = .5, pch = 21) +
  geom_smooth(
    data = flights_clean,
    aes(x = distance, y = arr_delay, color = name),
    se = FALSE, inherit.aes = FALSE, linewidth = 0.75,
    method = 'gam',
    formula = y ~ s(x, bs = "cs", k = 3),
    show.legend = FALSE
  ) +
  scale_x_continuous(
    limits = c(0, 3050),
    expand = c(0, 0),
    name = "distance (miles)"
  ) +
  scale_y_continuous(name = "mean arrival delay (min.)") +
  scale_size(
    breaks = c(4000, 8000, 12000),
    name = "# of flights",
    range = c(2, 8)
  ) +
  scale_color_manual(
    name = "airline",
    values = darken(c("#56B4E9", "#CC79A7", "#E69F00"))
  ) +
  scale_fill_manual(
    name = "airline",
    values = c("#56B4E9", "#CC79A7", "#E69F00")
  ) +
  guides(
    color = guide_legend(order = 1),
    fill = guide_legend(
      override.aes = list(size = 4, alpha = .7),
      order = 1
    ),
    size = guide_legend(
      override.aes = list(fill = "gray70"),
      order = 2
    )
  ) +
  theme_minimal_grid() +
  theme(plot.margin = margin(3.5, 14, 3.5, 1.5))

stamp_bad(p_delay_distance) 
```
:::

## Prepare figures that make a clear point

```{r}
#| label: mean-arrival-delay-nyc
#| echo: false
#| message: false
#| fig-width: 7.5
#| fig-cap: "&nbsp;"
#| out-width: "80%"

flights_grouped <- flights |> 
  mutate(
  carrier = ifelse(
    carrier %in% c("OO", "HA", "YV", "F9", "AS", "FL", "VX"), 
    "--", carrier)
  ) |>
  left_join(carrier_names, by = "carrier") |>
  group_by(name)

flights_grouped |>
  summarize(mean_delay = mean(arr_delay, na.rm = TRUE)) |>
  na.omit() |>
  mutate(
    name = fct_reorder(name, desc(mean_delay)),
    highlight = ifelse(name %in% c("Delta", "American"), "yes", "no")
  ) |>
  ggplot() +
  aes(x = mean_delay, y = name, fill = highlight) + 
  geom_col() +
  scale_x_continuous(
    name = "mean arrival delay (min.)",
    expand = c(0, 0)
  ) +
  scale_y_discrete(name = NULL) +
  scale_fill_manual(values = c("#B0B0B0D0", "#BD3828D0"), guide = "none") +
  coord_cartesian(clip = "off") +
  theme_minimal_vgrid(rel_small = 1) +
  theme(
    axis.line.y = element_blank(),
    axis.ticks.y = element_blank()
  )
```

[American and Delta have the shortest delays]{.small-font style="position: absolute; top: 14%; left: 38%; width: 3.8in; background: white;"}

## Make your figures memorable

<br>

![](https://clauswilke.com/dataviz/telling_a_story_files/figure-html/petownership-bar-1.png){.fragment width="80%" fig-align="center"}

## Make your figures memorable

<br>

![](https://clauswilke.com/dataviz/telling_a_story_files/figure-html/petownership-isotype-1.png){width="80%" fig-align="center"}

<!-- Segment ends here -->

## Further reading

::: {.small-font}
- Fundamentals of Data Visualization: [Chapter 29: Telling a story and making a point](https://clauswilke.com/dataviz/telling-a-story.html)

- Joshua Schimel (2011) Writing Science: How to Write Papers That Get Cited and Proposals That Get Funded
:::